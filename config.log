This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

configure:542: checking for gcc
configure:655: checking whether the C compiler (gcc  ) works
configure:671: gcc -o conftest    conftest.c  1>&5
configure:697: checking whether the C compiler (gcc  ) is a cross-compiler
configure:702: checking whether we are using GNU C
configure:711: gcc -E conftest.c
configure:730: checking whether gcc accepts -g
configure:766: checking for c++
configure:798: checking whether the C++ compiler (c++  ) works
configure:814: c++ -o conftest    conftest.C  1>&5
configure:840: checking whether the C++ compiler (c++  ) is a cross-compiler
configure:845: checking whether we are using GNU C++
configure:854: c++ -E conftest.C
configure:873: checking whether c++ accepts -g
configure:905: checking whether ln -s works
configure:926: checking whether make sets ${MAKE}
configure:983: checking for a BSD compatible install
configure:1049: checking for dirent.h that defines DIR
configure:1062: c++ -c -g  conftest.C 1>&5
configure:1087: checking for opendir in -ldir
configure:1109: c++ -o conftest -g   conftest.C -ldir   1>&5
/usr/bin/ld: cannot find -ldir
collect2: error: ld returned 1 exit status
configure: failed program was:
#line 1095 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char opendir();

int main() {
opendir()
; return 0; }
configure:1176: checking how to run the C++ preprocessor
configure:1194: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1219: checking for ANSI C header files
configure:1232: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1302: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for strncasecmp
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for memcpy
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for bcopy
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for strcspn
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for strncpy
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1328: checking for cfmakeraw
configure:1359: c++ -o conftest -g   conftest.C  1>&5
configure:1386: checking for vsnprintf
configure:1417: c++ -o conftest -g   conftest.C  1>&5
configure:1386: checking for vsprintf
configure:1417: c++ -o conftest -g   conftest.C  1>&5
configure:1386: checking for rindex
configure:1417: c++ -o conftest -g   conftest.C  1>&5
configure:1386: checking for strrchr
configure:1417: c++ -o conftest -g   conftest.C  1>&5
configure:1445: checking for fcntl.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1445: checking for unistd.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1445: checking for gpm.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1451:17: fatal error: gpm.h: No such file or directory
 #include <$ac_hdr>
                 ^
compilation terminated.
configure: failed program was:
#line 1450 "configure"
#include "confdefs.h"
#include <gpm.h>
configure:1445: checking for malloc.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1445: checking for string.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1445: checking for strings.h
configure:1455: c++ -E  conftest.C >/dev/null 2>conftest.out
configure:1483: checking for off_t
configure:1516: checking for size_t
configure:1549: checking whether struct tm is in sys/time.h or time.h
configure:1562: c++ -c -g  conftest.C 1>&5
configure:1583: checking for tm_zone in struct tm
configure:1596: c++ -c -g  conftest.C 1>&5
configure:1653: checking size of long
configure:1676: c++ -o conftest -g   conftest.C  1>&5
configure: In function 'int main()':
configure:1671:34: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]
   fprintf(f, "%d\n", sizeof(long));
                                  ^
configure:1695: checking size of int
configure:1718: c++ -o conftest -g   conftest.C  1>&5
configure: In function 'int main()':
configure:1713:33: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]
   fprintf(f, "%d\n", sizeof(int));
                                 ^
configure:1737: checking size of long long
configure:1760: c++ -o conftest -g   conftest.C  1>&5
configure: In function 'int main()':
configure:1755:39: warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]
   fprintf(f, "%d\n", sizeof(long long));
                                       ^
configure:1779: checking whether byte ordering is bigendian
configure:1797: c++ -c -g  conftest.C 1>&5
configure:1812: c++ -c -g  conftest.C 1>&5
configure: In function 'int main()':
configure:1807:6: error: 'big' was not declared in this scope
  not big endian
      ^
configure:1807:10: error: expected ';' before 'endian'
  not big endian
          ^
configure: failed program was:
#line 1801 "configure"
#include "confdefs.h"
#include <sys/types.h>
#include <sys/param.h>
int main() {

#if BYTE_ORDER != BIG_ENDIAN
 not big endian
#endif
; return 0; }
configure:1876: checking for unistd.h
configure:1915: checking for getpagesize
configure:1946: c++ -o conftest -g   conftest.C  1>&5
configure:1971: checking for working mmap
configure:2122: c++ -o conftest -g   conftest.C  1>&5
configure: In function 'int main()':
configure:2063:25: error: 'getpagesize' was not declared in this scope
  pagesize = getpagesize();
                         ^
configure:2068:24: error: invalid conversion from 'void*' to 'char*' [-fpermissive]
  data = malloc(pagesize);
                        ^
configure:2072:22: error: 'rand' was not declared in this scope
   *(data + i) = rand();
                      ^
configure:2073:9: error: 'umask' was not declared in this scope
  umask(0);
         ^
configure:2077:30: error: 'write' was not declared in this scope
  if (write(fd, data, pagesize) != pagesize)
                              ^
configure:2079:10: error: 'close' was not declared in this scope
  close(fd);
          ^
configure:2089:29: error: invalid conversion from 'void*' to 'char*' [-fpermissive]
  data2 = malloc(2 * pagesize);
                             ^
configure:2092:30: error: cast from 'char*' to 'int' loses precision [-fpermissive]
  data2 += (pagesize - ((int) data2 & (pagesize - 1))) & (pagesize - 1);
                              ^
configure:2107:25: error: invalid conversion from 'void*' to 'char*' [-fpermissive]
  data3 = malloc(pagesize);
                         ^
configure:2110:30: error: 'read' was not declared in this scope
  if (read(fd, data3, pagesize) != pagesize)
                              ^
configure:2116:23: error: 'unlink' was not declared in this scope
  unlink("conftestmmap");
                       ^
configure: failed program was:
#line 1979 "configure"
#include "confdefs.h"
#ifdef __cplusplus
extern "C" void exit(int);
#endif

/* Thanks to Mike Haertel and Jim Avera for this test.
   Here is a matrix of mmap possibilities:
	mmap private not fixed
	mmap private fixed at somewhere currently unmapped
	mmap private fixed at somewhere already mapped
	mmap shared not fixed
	mmap shared fixed at somewhere currently unmapped
	mmap shared fixed at somewhere already mapped
   For private mappings, we should verify that changes cannot be read()
   back from the file, nor mmap's back from the file at a different
   address.  (There have been systems where private was not correctly
   implemented like the infamous i386 svr4.0, and systems where the
   VM page cache was not coherent with the filesystem buffer cache
   like early versions of FreeBSD and possibly contemporary NetBSD.)
   For shared mappings, we should conversely verify that changes get
   propogated back to all the places they're supposed to be.

   Grep wants private fixed already mapped.
   The main things grep needs to know about mmap are:
   * does it exist and is it safe to write into the mmap'd area
   * how to use it (BSD variants)  */
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

/* This mess was copied from the GNU getpagesize.h.  */
#ifndef HAVE_GETPAGESIZE
# ifdef HAVE_UNISTD_H
#  include <unistd.h>
# endif

/* Assume that all systems that can run configure have sys/param.h.  */
# ifndef HAVE_SYS_PARAM_H
#  define HAVE_SYS_PARAM_H 1
# endif

# ifdef _SC_PAGESIZE
#  define getpagesize() sysconf(_SC_PAGESIZE)
# else /* no _SC_PAGESIZE */
#  ifdef HAVE_SYS_PARAM_H
#   include <sys/param.h>
#   ifdef EXEC_PAGESIZE
#    define getpagesize() EXEC_PAGESIZE
#   else /* no EXEC_PAGESIZE */
#    ifdef NBPG
#     define getpagesize() NBPG * CLSIZE
#     ifndef CLSIZE
#      define CLSIZE 1
#     endif /* no CLSIZE */
#    else /* no NBPG */
#     ifdef NBPC
#      define getpagesize() NBPC
#     else /* no NBPC */
#      ifdef PAGESIZE
#       define getpagesize() PAGESIZE
#      endif /* PAGESIZE */
#     endif /* no NBPC */
#    endif /* no NBPG */
#   endif /* no EXEC_PAGESIZE */
#  else /* no HAVE_SYS_PARAM_H */
#   define getpagesize() 8192	/* punt totally */
#  endif /* no HAVE_SYS_PARAM_H */
# endif /* no _SC_PAGESIZE */

#endif /* no HAVE_GETPAGESIZE */

#ifdef __cplusplus
extern "C" { void *malloc(unsigned); }
#else
char *malloc();
#endif

int
main()
{
	char *data, *data2, *data3;
	int i, pagesize;
	int fd;

	pagesize = getpagesize();

	/*
	 * First, make a file with some known garbage in it.
	 */
	data = malloc(pagesize);
	if (!data)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		*(data + i) = rand();
	umask(0);
	fd = creat("conftestmmap", 0600);
	if (fd < 0)
		exit(1);
	if (write(fd, data, pagesize) != pagesize)
		exit(1);
	close(fd);

	/*
	 * Next, try to mmap the file at a fixed address which
	 * already has something else allocated at it.  If we can,
	 * also make sure that we see the same garbage.
	 */
	fd = open("conftestmmap", O_RDWR);
	if (fd < 0)
		exit(1);
	data2 = malloc(2 * pagesize);
	if (!data2)
		exit(1);
	data2 += (pagesize - ((int) data2 & (pagesize - 1))) & (pagesize - 1);
	if (data2 != mmap(data2, pagesize, PROT_READ | PROT_WRITE,
	    MAP_PRIVATE | MAP_FIXED, fd, 0L))
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data2 + i))
			exit(1);

	/*
	 * Finally, make sure that changes to the mapped area
	 * do not percolate back to the file as seen by read().
	 * (This is a bug on some variants of i386 svr4.0.)
	 */
	for (i = 0; i < pagesize; ++i)
		*(data2 + i) = *(data2 + i) + 1;
	data3 = malloc(pagesize);
	if (!data3)
		exit(1);
	if (read(fd, data3, pagesize) != pagesize)
		exit(1);
	for (i = 0; i < pagesize; ++i)
		if (*(data + i) != *(data3 + i))
			exit(1);
	close(fd);
	unlink("conftestmmap");
	exit(0);
}

configure:2145: checking for vprintf
configure:2176: c++ -o conftest -g   conftest.C  1>&5
